// server/proto/problem_gen.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: server/proto/problem_gen.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to generate a math problem set
type GenerateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gender      string   `protobuf:"bytes,2,opt,name=gender,proto3" json:"gender,omitempty"`
	Operation   string   `protobuf:"bytes,3,opt,name=operation,proto3" json:"operation,omitempty"`
	NumProblems int32    `protobuf:"varint,4,opt,name=num_problems,json=numProblems,proto3" json:"num_problems,omitempty"`
	GradeLevel  string   `protobuf:"bytes,5,opt,name=grade_level,json=gradeLevel,proto3" json:"grade_level,omitempty"`
	LikesNouns  []string `protobuf:"bytes,6,rep,name=likes_nouns,json=likesNouns,proto3" json:"likes_nouns,omitempty"`
	LikesVerbs  []string `protobuf:"bytes,7,rep,name=likes_verbs,json=likesVerbs,proto3" json:"likes_verbs,omitempty"`
}

func (x *GenerateRequest) Reset() {
	*x = GenerateRequest{}
	mi := &file_server_proto_problem_gen_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateRequest) ProtoMessage() {}

func (x *GenerateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_problem_gen_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateRequest.ProtoReflect.Descriptor instead.
func (*GenerateRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_problem_gen_proto_rawDescGZIP(), []int{0}
}

func (x *GenerateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GenerateRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *GenerateRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *GenerateRequest) GetNumProblems() int32 {
	if x != nil {
		return x.NumProblems
	}
	return 0
}

func (x *GenerateRequest) GetGradeLevel() string {
	if x != nil {
		return x.GradeLevel
	}
	return ""
}

func (x *GenerateRequest) GetLikesNouns() []string {
	if x != nil {
		return x.LikesNouns
	}
	return nil
}

func (x *GenerateRequest) GetLikesVerbs() []string {
	if x != nil {
		return x.LikesVerbs
	}
	return nil
}

// Single math problem
type Problem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     int32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Theme     string  `protobuf:"bytes,2,opt,name=theme,proto3" json:"theme,omitempty"`
	Text      string  `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Numbers   []int32 `protobuf:"varint,4,rep,packed,name=numbers,proto3" json:"numbers,omitempty"`
	Operation string  `protobuf:"bytes,5,opt,name=operation,proto3" json:"operation,omitempty"`
	Answer    string  `protobuf:"bytes,6,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *Problem) Reset() {
	*x = Problem{}
	mi := &file_server_proto_problem_gen_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Problem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Problem) ProtoMessage() {}

func (x *Problem) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_problem_gen_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Problem.ProtoReflect.Descriptor instead.
func (*Problem) Descriptor() ([]byte, []int) {
	return file_server_proto_problem_gen_proto_rawDescGZIP(), []int{1}
}

func (x *Problem) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Problem) GetTheme() string {
	if x != nil {
		return x.Theme
	}
	return ""
}

func (x *Problem) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Problem) GetNumbers() []int32 {
	if x != nil {
		return x.Numbers
	}
	return nil
}

func (x *Problem) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *Problem) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

// Set of problems plus original request
type ProblemSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problems []*Problem       `protobuf:"bytes,1,rep,name=problems,proto3" json:"problems,omitempty"`
	Meta     *GenerateRequest `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *ProblemSet) Reset() {
	*x = ProblemSet{}
	mi := &file_server_proto_problem_gen_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProblemSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemSet) ProtoMessage() {}

func (x *ProblemSet) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_problem_gen_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemSet.ProtoReflect.Descriptor instead.
func (*ProblemSet) Descriptor() ([]byte, []int) {
	return file_server_proto_problem_gen_proto_rawDescGZIP(), []int{2}
}

func (x *ProblemSet) GetProblems() []*Problem {
	if x != nil {
		return x.Problems
	}
	return nil
}

func (x *ProblemSet) GetMeta() *GenerateRequest {
	if x != nil {
		return x.Meta
	}
	return nil
}

// Response containing generated PDF bytes
type PDFResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pdf      []byte `protobuf:"bytes,1,opt,name=pdf,proto3" json:"pdf,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *PDFResponse) Reset() {
	*x = PDFResponse{}
	mi := &file_server_proto_problem_gen_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDFResponse) ProtoMessage() {}

func (x *PDFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_problem_gen_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDFResponse.ProtoReflect.Descriptor instead.
func (*PDFResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_problem_gen_proto_rawDescGZIP(), []int{3}
}

func (x *PDFResponse) GetPdf() []byte {
	if x != nil {
		return x.Pdf
	}
	return nil
}

func (x *PDFResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

var File_server_proto_problem_gen_proto protoreflect.FileDescriptor

var file_server_proto_problem_gen_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x67, 0x65, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x67, 0x65, 0x6e, 0x22, 0xe1, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x75,
	0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x5f, 0x6e, 0x6f, 0x75, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x4e, 0x6f, 0x75, 0x6e, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x62, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x56, 0x65, 0x72, 0x62, 0x73,
	0x22, 0x99, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x6e, 0x0a, 0x0a,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x67, 0x65, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x67, 0x65, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x3b, 0x0a, 0x0b,
	0x50, 0x44, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x64, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x70, 0x64, 0x66, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x32, 0xa0, 0x01, 0x0a, 0x09, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x49, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x12, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x67, 0x65, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x67, 0x65, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53,
	0x65, 0x74, 0x12, 0x48, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53, 0x65, 0x74, 0x50, 0x44, 0x46, 0x12, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x67, 0x65, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x53, 0x65, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x67, 0x65, 0x6e,
	0x2e, 0x50, 0x44, 0x46, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x16, 0x5a, 0x14,
	0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_problem_gen_proto_rawDescOnce sync.Once
	file_server_proto_problem_gen_proto_rawDescData = file_server_proto_problem_gen_proto_rawDesc
)

func file_server_proto_problem_gen_proto_rawDescGZIP() []byte {
	file_server_proto_problem_gen_proto_rawDescOnce.Do(func() {
		file_server_proto_problem_gen_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_problem_gen_proto_rawDescData)
	})
	return file_server_proto_problem_gen_proto_rawDescData
}

var file_server_proto_problem_gen_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_server_proto_problem_gen_proto_goTypes = []any{
	(*GenerateRequest)(nil), // 0: problemgen.GenerateRequest
	(*Problem)(nil),         // 1: problemgen.Problem
	(*ProblemSet)(nil),      // 2: problemgen.ProblemSet
	(*PDFResponse)(nil),     // 3: problemgen.PDFResponse
}
var file_server_proto_problem_gen_proto_depIdxs = []int32{
	1, // 0: problemgen.ProblemSet.problems:type_name -> problemgen.Problem
	0, // 1: problemgen.ProblemSet.meta:type_name -> problemgen.GenerateRequest
	0, // 2: problemgen.Generator.GenerateProblemSet:input_type -> problemgen.GenerateRequest
	2, // 3: problemgen.Generator.GenerateProblemSetPDF:input_type -> problemgen.ProblemSet
	2, // 4: problemgen.Generator.GenerateProblemSet:output_type -> problemgen.ProblemSet
	3, // 5: problemgen.Generator.GenerateProblemSetPDF:output_type -> problemgen.PDFResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_server_proto_problem_gen_proto_init() }
func file_server_proto_problem_gen_proto_init() {
	if File_server_proto_problem_gen_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_problem_gen_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_problem_gen_proto_goTypes,
		DependencyIndexes: file_server_proto_problem_gen_proto_depIdxs,
		MessageInfos:      file_server_proto_problem_gen_proto_msgTypes,
	}.Build()
	File_server_proto_problem_gen_proto = out.File
	file_server_proto_problem_gen_proto_rawDesc = nil
	file_server_proto_problem_gen_proto_goTypes = nil
	file_server_proto_problem_gen_proto_depIdxs = nil
}
